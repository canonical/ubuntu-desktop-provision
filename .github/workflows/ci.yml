name: CI

on:
  push:
    branches:
      - main
      - 'ubuntu/**'
      - 'canary-*'
  pull_request:
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.10.x'

jobs:
  analyze:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: ${{env.FLUTTER_VERSION}}
    - run: flutter pub global activate melos
    - run: melos pub get
    - run: melos analyze

  bootstrap:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - ubuntu_bootstrap_test.dart
          - screenshot_test.dart
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: |
          sudo apt update
          sudo apt install -y clang cmake curl libgtk-3-dev ninja-build pkg-config unzip
          sudo apt install -y dbus-x11 network-manager upower
          make install_deps
      - run: |
          sudo loginctl enable-linger $USER
          sudo systemctl start user@$UID.service
          echo "XDG_RUNTIME_DIR=/run/user/$UID" >> $GITHUB_ENV
          # write any setting to force-start dconf.service (via xvfb because dbus-launch needs a display)
          xvfb-run -a gsettings set org.gnome.desktop.interface color-scheme "'default'"
      - run: xvfb-run -a -s '-screen 0 1024x768x24 +extension GLX' flutter test integration_test/${{matrix.target}}
        working-directory: packages/ubuntu_bootstrap
        env:
          SUBIQUITY_REPLAY_TIMESCALE: 100

  coverage:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        package:
          - ubuntu_bootstrap
          - ubuntu_init
          - ubuntu_provision
          - ubuntu_utils
          - ubuntu_wizard
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: ${{env.FLUTTER_VERSION}}
    - run: flutter pub get
      working-directory: packages/${{matrix.package}}
    - run: flutter test --coverage
      working-directory: packages/${{matrix.package}}
    - run: sudo apt update && sudo apt install lcov
    - run: lcov --remove coverage/lcov.info '**/*.g.dart' '**/*.freezed.dart' -o coverage/lcov.info
      working-directory: packages/${{matrix.package}}
    - uses: codecov/codecov-action@v3
      with:
        token: ${{secrets.CODECOV_TOKEN}}

  format:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: ${{env.FLUTTER_VERSION}}
    - run: flutter pub global activate melos
    - run: melos pub get
    - run: melos format

  init:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: sudo apt update
      - run: sudo apt install -y clang cmake curl libgtk-3-dev ninja-build pkg-config unzip
      - run: xvfb-run -a -s '-screen 0 1024x768x24 +extension GLX' flutter test integration_test
        working-directory: packages/ubuntu_init

  mocks:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: ${{env.FLUTTER_VERSION}}
    - run: flutter pub global activate melos
    - run: melos pub get
    - run: melos generate
    - name: Check for outdated mocks
      if: github.event_name == 'pull_request'
      run: ./.github/scripts/check-outdated-files.sh
    - name: Create PR
      if: github.event_name == 'push'
      uses: peter-evans/create-pull-request@v5
      with:
        add-paths: '**/*.mocks.dart'
        title: 'chore: regenerate mocks'
        commit-message: 'chore: regenerate mocks'
        branch: create-pull-request/mocks
        delete-branch: true

  l10n:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: ${{env.FLUTTER_VERSION}}
    - run: flutter pub global activate melos
    - run: melos pub get
    - run: melos gen-l10n
    - name: Check for outdated l10n
      if: github.event_name == 'pull_request'
      run: ./.github/scripts/check-outdated-files.sh
    - name: Create PR
      if: github.event_name == 'push'
      uses: peter-evans/create-pull-request@v5
      with:
        add-paths: '**/l10n/*.dart'
        title: 'chore: regenerate l10n'
        commit-message: 'chore: regenerate l10n'
        branch: create-pull-request/l10n
        delete-branch: true

  test:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: ${{env.FLUTTER_VERSION}}
    - run: flutter pub global activate melos
    - run: melos pub get
    - run: melos test
