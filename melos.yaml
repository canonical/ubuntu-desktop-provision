name: ubuntu_desktop_provision

packages:
  - packages/**

command:
  bootstrap:
    environment:
      sdk: ">=3.0.0 <4.0.0"
      flutter: '>=3.13.0'

    dependencies:
      args: ^2.4.2
      async: ^2.11.0
      collection: ^1.17.0
      crypt: ^4.3.1
      dartx: ^1.2.0
      dbus: ^0.7.8
      diacritic: ^0.1.4
      ffi: ^2.1.0
      file: ^6.1.0
      flutter_html: ^3.0.0-beta.1
      flutter_markdown: ^0.6.18
      flutter_riverpod: ^2.4.5
      flutter_spinbox: ^0.13.1
      flutter_svg: ^2.0.9
      form_field_validator: ^1.1.0
      freezed_annotation: ^2.4.1
      gsettings: ^0.2.8
      handy_window: ^0.3.1
      intl: ^0.18.1
      json_annotation: ^4.8.1
      meta: ^1.9.1
      nm: ^0.5.0
      package_config: ^2.1.0
      path: ^1.8.3
      platform: ^3.1.0
      safe_change_notifier: ^0.3.1
      scroll_to_index: ^3.0.1
      split_view: ^3.2.1
      stdlibc: ^0.1.4
      synchronized: ^3.1.0
      ubuntu_flavor: ^0.2.0
      ubuntu_lints: ^0.1.0
      ubuntu_localizations: ^0.3.3
      ubuntu_logger: ^0.1.0
      ubuntu_service: ^0.3.0
      ubuntu_session: ^0.0.4
      ubuntu_widgets: ^0.2.0
      udev: ^0.0.3
      upower: ^0.7.0
      url_launcher: ^6.2.1
      wizard_router: ^1.0.4
      xdg_directories: ^1.0.3
      xdg_locale: ^0.0.1
      yaml: ^3.1.2
      yaru: 1.1.0
      yaru_icons: 2.2.2
      yaru_widgets: 3.2.2
      yaru_window: 0.1.3

    dev_dependencies:
      build_runner: ^2.4.6
      fake_async: ^1.3.1
      ffigen: ^9.0.1
      freezed: ^2.4.5
      json_serializable: ^6.7.1
      mockito: 5.4.2
      plugin_platform_interface: ^2.1.6
      test: any
      ubuntu_test: ^0.1.0-0
      url_launcher_platform_interface: ^2.2.0
      yaru_test: ^0.1.5

scripts:
  # analyze all packages
  analyze: >
    melos exec -c 1 -- \
      flutter analyze .

  # collect coverage information for all packages
  coverage: >
    melos exec -c 1 --fail-fast --dir-exists=test -- \
      flutter test --coverage && melos run coverage:cleanup

  # cleanup generated files from coverage
  coverage:cleanup: >
    melos exec --file-exists=coverage/lcov.info -- \
      lcov --remove coverage/lcov.info '**/*.g.dart' '**/*.freezed.dart' -o coverage/lcov.info

  # format all packages
  format: >
    melos exec -c 1 --fail-fast -- \
      "find $MELOS_PACKAGE_PATH -name '*.dart' \
          ! -name '*.g.dart' \
          ! -name '*.freezed.dart' \
          ! -path '*/l10n/*' \
          ! -path '*/.*/*' \
          | xargs dart format --set-exit-if-changed"

  # run build_runner to generate code in all packages
  generate: >
    melos exec -c 1 --fail-fast --depends-on="build_runner" -- \
      dart run build_runner build --delete-conflicting-outputs

  # run gen-l10n to generate localizations in all packages
  gen-l10n: >
    melos exec -c 1 --fail-fast --file-exists="lib/l10n.dart" -- \
     flutter gen-l10n

  # run integration tests in all packages
  integration_test: >
    melos exec -c 1 --fail-fast --dir-exists=integration_test -- \
      flutter test integration_test

  # runs "flutter pub <arg(s)>" in all packages
  pub: melos exec -c 1 -- flutter pub "$@"

  # run tests in all packages
  test: >
    melos exec -c 1 --fail-fast --dir-exists=test -- \
      flutter test

  # run pub upgrade in all packages
  upgrade: melos exec flutter pub upgrade
