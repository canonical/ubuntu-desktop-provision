name: ubuntu-desktop-bootstrap
version: git
summary: Ubuntu Desktop Bootstrap
description: |
  A modern implementation of the Ubuntu Desktop installer.
  It comprises a Flutter-based UI and uses subiquity as the backend.
contact: https://bugs.launchpad.net/ubuntu-desktop-provision
issues: https://bugs.launchpad.net/ubuntu-desktop-provision
grade: stable
confinement: classic
base: core24
platforms:
  amd64:
  arm64:

apps:
  subiquity-server:
    command: bin/subiquity-server
    daemon: simple
    restart-condition: always
    environment:
      APPORT_DATA_DIR_ORIG: $APPORT_DATA_DIR
      APPORT_DATA_DIR: $SNAP/usr/share/apport
      PATH_ORIG: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
      PYTHON_ORIG: $PYTHON
      PYTHONPATH_ORIG: $PYTHONPATH

  subiquity-loadkeys:
    command: bin/subiquity/bin/subiquity-loadkeys

  ubuntu-desktop-bootstrap:
    command: bin/ubuntu_bootstrap
    command-chain: [bin/launcher]
    desktop: usr/share/applications/ubuntu-desktop-bootstrap.desktop
    environment:
      APPORT_DATA_DIR_ORIG: $APPORT_DATA_DIR
      APPORT_DATA_DIR: $SNAP/usr/share/apport
      PATH_ORIG: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
      PATH: $SNAP/usr/bin:$SNAP/bin:$PATH
      PYTHON_ORIG: $PYTHON
      PYTHONPATH_ORIG: $PYTHONPATH
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/dri
      GIO_MODULE_DIR: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/gio/modules
      LIVE_RUN: 1
      LOG_LEVEL: debug
      SNAP_PYTHON: python3

  probert:
    command: bin/probert

parts:
  ubuntu-bootstrap:
    after: [flutter-git]
    plugin: nil
    source: .
    source-commit: &commit-ref 03e1840c066daa10d6a5c69f022d277c5039ed44
    source-type: git
    build-attributes: [enable-patchelf]
    override-build: |
      set -eux
      mkdir -p $CRAFT_PART_INSTALL/bin
      git submodule update --init --recursive
      cp -r packages/subiquity_client/subiquity $CRAFT_PART_INSTALL/bin/

      dart pub global activate melos
      dart pub global run melos bootstrap
      cd apps/ubuntu_bootstrap
      flutter build linux --release -v
      cp -r build/linux/*/release/bundle/* $CRAFT_PART_INSTALL/bin/
    override-prime: |
      snapcraftctl prime
      cp $CRAFT_PART_INSTALL/bin/subiquity/scripts/management-script $CRAFT_PRIME/

  curtin:
    plugin: nil
    source: https://git.launchpad.net/curtin
    source-type: git
    source-commit: 0ded564bde89cbf2ede7a9c3d6e1c260688b37cb
    override-pull: |
      craftctl default
      PACKAGED_VERSION="$(git describe --long --abbrev=9 --match=[0-9][0-9]*)"
      sed -e "s,@@PACKAGED_VERSION@@,$PACKAGED_VERSION,g" -i curtin/version.py
    override-build: &pyinstall |
      # We install without dependencies because all dependencies come from
      # archive packages.
      # XXX: On core22, running `pip3 install --prefix xxx` does not do the
      # right thing. The package ends up installed in xxx/local and the modules
      # get installed to dist-packages instead of site-packages.
      # See https://discuss.python.org/t/18240
      # As a workaround, we use a fake user install to get the package
      # installed in the expected place.
      PYTHONUSERBASE="$CRAFT_PART_INSTALL" pip3 install --user --no-dependencies --break-system-packages .
    build-packages:
      - python3-pip
    organize:
      lib/python*/site-packages/usr/lib/curtin: usr/lib/

  probert:
    plugin: nil
    source: https://github.com/canonical/probert.git
    source-type: git
    source-commit: 83d25c873a4a7d93c158d76da86cb9c612c29572
    override-build: *pyinstall
    build-packages:
      - build-essential
      - libnl-3-dev
      - libnl-genl-3-dev
      - libnl-route-3-dev
      - pkg-config
      - python3-dev
      - python3-pip
    build-attributes: [enable-patchelf]
    stage:
      - "*"
      - -bin/python3*

  subiquitydeps:
    plugin: nil
    build-attributes: [enable-patchelf]
    stage-packages:
      # This list includes the dependencies for curtin and probert as well,
      # there doesn't seem to be any real benefit to listing them separately.
      - iso-codes
      - libpython3-stdlib
      - libpython3.12-minimal
      - libpython3.12-stdlib
      - libsystemd0
      - lsb-release
      - ntfs-3g
      - python3-aiohttp
      - python3-apport
      - python3-attr
      - python3-bson
      - python3-debian
      - python3-distro-info
      - python3-jsonschema
      - python3-minimal
      - python3-more-itertools
      - python3-oauthlib
      - python3-passlib
      - python3-pkg-resources
      - python3-pyroute2
      - python3-pyrsistent
      - python3-pyudev
      - python3-requests
      - python3-requests-unixsocket
      - python3-systemd
      - python3-urwid
      - python3-yaml
      - python3-yarl
      - python3.12-minimal
      - ssh-import-id
      - ubuntu-advantage-tools
    prime:
      - -lib/systemd/system/*

  flutter-git:
    plugin: nil
    source: .
    source-commit: *commit-ref
    source-type: git
    override-pull: |
      # necessary when reruns using the same container
      if [ -d "flutter" ]; then
        rm -rf "flutter"
      fi

      craftctl default
      FLUTTER_VERSION=$(sed -n "s/^flutter \([0-9.]\+\).*/\1/p" .tool-versions)
      git clone -b $FLUTTER_VERSION --depth 1 https://github.com/flutter/flutter.git
    override-build: |
      mkdir -p $CRAFT_PART_INSTALL/usr/bin
      mkdir -p $CRAFT_PART_INSTALL/usr/libexec
      cp -r $CRAFT_PART_SRC/flutter $CRAFT_PART_INSTALL/usr/libexec/flutter
      ln -s $CRAFT_PART_INSTALL/usr/libexec/flutter/bin/flutter $CRAFT_PART_INSTALL/usr/bin/flutter
      ln -s $CRAFT_PART_INSTALL/usr/libexec/flutter/bin/dart $CRAFT_PART_INSTALL/usr/bin/dart
      $CRAFT_PART_INSTALL/usr/bin/flutter doctor
    build-packages:
      - clang
      - cmake
      - curl
      - libgtk-3-dev
      - ninja-build
      - unzip
      - xz-utils
      - zip
    override-prime: ""

  launcher:
    plugin: nil
    source: .
    source-type: git
    build-attributes: [enable-patchelf]
    override-build: |
      set -eux
      mkdir -p $CRAFT_PART_INSTALL/bin/lib
      cp snap/local/launcher $CRAFT_PART_INSTALL/bin/
      cp snap/local/subiquity-server $CRAFT_PART_INSTALL/bin/
      mkdir -p $CRAFT_PART_INSTALL/etc/subiquity
      cp -r snap/local/postinst.d $CRAFT_PART_INSTALL/etc/subiquity
      mkdir -p $CRAFT_PART_INSTALL/usr/share/applications
      cp snap/local/ubuntu-desktop-bootstrap.desktop $CRAFT_PART_INSTALL/usr/share/applications/

  libraries:
    plugin: nil
    build-attributes: [enable-patchelf]
    stage-packages:
      - libatk1.0-0
      - libcairo-gobject2
      - libcairo2
      - libegl-mesa0
      - libegl1
      # Needed for the dri drivers see https://github.com/canonical/ubuntu-desktop-installer/issues/2391
      - libelf1
      - libgl1
      - libglib2.0-0
      - libglib2.0-dev
      - libgirepository-1.0-1
      - libgtk-3-0
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpng16-16
      - libwayland-egl1
      - libx11-6
      - libdatrie1
      - libdrm2
      - libgbm1
      - libglapi-mesa
      - libgraphite2-3
      - libxshmfence1
      - libpciaccess0
      - libvulkan1
      - shared-mime-info
      - libglib2.0-bin
      - libibus-1.0-5
      - python3-gi
    prime:
      - usr/lib/*/libEGL*.so.*
      - usr/lib/*/libGL*.so.*
      - usr/lib/*/libX*.so.*
      - usr/lib/*/liba*.so.*
      - usr/lib/*/libcairo*.so.*
      - usr/lib/*/libe*.so.*
      - usr/lib/*/libf*.so.*
      - usr/lib/*/libg*.so.*
      - usr/lib/*/libharfbuzz*.so.*
      - usr/lib/*/libibus*.so.*
      - usr/lib/*/libpango*.so.*
      - usr/lib/*/libpixman*.so.*
      - usr/lib/*/libpng*.so.*
      - usr/lib/*/libthai*.so.*
      - usr/lib/*/libwayland*.so.*
      - usr/lib/*/libxcb*.so.*
      - usr/lib/*/libxkb*.so.*
      - usr/lib/*/libdatrie*.so.*
      - usr/lib/*/libdrm*.so.*
      - usr/lib/*/libgbm*.so.*
      - usr/lib/*/libglapi*.so.*
      - usr/lib/*/libgraphite2*.so.*
      - usr/lib/*/libxshmfence*.so.*
      - usr/lib/*/libpciaccess*.so.*
      - usr/lib/*/libsensors*.so.*
      - usr/lib/*/libvulkan*.so.*
      - usr/lib/python3/dist-packages/gi
      - usr/share/glvnd/egl_vendor.d
      - usr/lib/*/gdk-pixbuf-2.0
      - usr/lib/*/
      - usr/bin/update-mime-database
      - usr/bin/g*
      - usr/share/mime
      - -usr/lib/*/pkgconfig
      - -usr/lib/pkgconfig
      - -usr/share/pkgconfig

  dri-no-patchelf:
    after: [libraries]
    plugin: nil
    stage-packages:
      - libgl1-mesa-dri
    build-attributes:
      - no-patchelf # Otherwise snapcraft may strip the build ID and cause the driver to crash
    stage:
      - usr/lib/${CRAFT_ARCH_TRIPLET}/dri
      - usr/share/drirc.d
