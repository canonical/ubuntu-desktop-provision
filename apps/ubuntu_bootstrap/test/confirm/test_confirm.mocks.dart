// Mocks generated by Mockito 5.4.4 from annotations
// in ubuntu_bootstrap/test/confirm/test_confirm.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:subiquity_client/subiquity_client.dart' as _i4;
import 'package:ubuntu_bootstrap/pages/confirm/confirm_model.dart' as _i3;
import 'package:ubuntu_provision/services.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductInfo_0 extends _i1.SmartFake implements _i2.ProductInfo {
  _FakeProductInfo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ConfirmModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfirmModel extends _i1.Mock implements _i3.ConfirmModel {
  MockConfirmModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.Disk> get disks => (super.noSuchMethod(
        Invocation.getter(#disks),
        returnValue: <_i4.Disk>[],
      ) as List<_i4.Disk>);

  @override
  List<_i4.Disk> get modifiedDisks => (super.noSuchMethod(
        Invocation.getter(#modifiedDisks),
        returnValue: <_i4.Disk>[],
      ) as List<_i4.Disk>);

  @override
  Map<String, List<_i4.Partition>> get partitions => (super.noSuchMethod(
        Invocation.getter(#partitions),
        returnValue: <String, List<_i4.Partition>>{},
      ) as Map<String, List<_i4.Partition>>);

  @override
  _i2.ProductInfo get productInfo => (super.noSuchMethod(
        Invocation.getter(#productInfo),
        returnValue: _FakeProductInfo_0(
          this,
          Invocation.getter(#productInfo),
        ),
      ) as _i2.ProductInfo);

  @override
  bool get hasBitLocker => (super.noSuchMethod(
        Invocation.getter(#hasBitLocker),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get isDisposed => (super.noSuchMethod(
        Invocation.getter(#isDisposed),
        returnValue: false,
      ) as bool);

  @override
  _i4.Partition? getOriginalPartition(
    String? sysname,
    int? number,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getOriginalPartition,
        [
          sysname,
          number,
        ],
      )) as _i4.Partition?);

  @override
  String? getEraseInstallOsName(_i4.GuidedStorageTargetEraseInstall? target) =>
      (super.noSuchMethod(Invocation.method(
        #getEraseInstallOsName,
        [target],
      )) as String?);

  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> startInstallation() => (super.noSuchMethod(
        Invocation.method(
          #startInstallation,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> markNetworkConfigured() => (super.noSuchMethod(
        Invocation.method(
          #markNetworkConfigured,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> reboot() => (super.noSuchMethod(
        Invocation.method(
          #reboot,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
