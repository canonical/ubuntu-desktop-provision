// Mocks generated by Mockito 5.4.4 from annotations
// in ubuntu_init/test/services/provd_identity_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:provd_client/src/generated/user.pbgrpc.dart' as _i2;
import 'package:provd_client/src/provd_user_client.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUsernameValidation_0 extends _i1.SmartFake
    implements _i2.UsernameValidation {
  _FakeUsernameValidation_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProvdUserClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockProvdUserClient extends _i1.Mock implements _i3.ProvdUserClient {
  MockProvdUserClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> createUser(_i2.User? user) => (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [user],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UsernameValidation> validateUsername(String? username) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateUsername,
          [username],
        ),
        returnValue:
            _i4.Future<_i2.UsernameValidation>.value(_FakeUsernameValidation_0(
          this,
          Invocation.method(
            #validateUsername,
            [username],
          ),
        )),
      ) as _i4.Future<_i2.UsernameValidation>);
}
