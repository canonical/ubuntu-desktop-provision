// Mocks generated by Mockito 5.4.4 from annotations
// in ubuntu_init/test/services/provd_accessibility_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:provd_client/src/provd_accessibility_client.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ProvdAccessibilityClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockProvdAccessibilityClient extends _i1.Mock
    implements _i2.ProvdAccessibilityClient {
  MockProvdAccessibilityClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> getHighContrast() => (super.noSuchMethod(
        Invocation.method(
          #getHighContrast,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableHighContrast() => (super.noSuchMethod(
        Invocation.method(
          #enableHighContrast,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableHighContrast() => (super.noSuchMethod(
        Invocation.method(
          #disableHighContrast,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getReducedMotion() => (super.noSuchMethod(
        Invocation.method(
          #getReducedMotion,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableReducedMotion() => (super.noSuchMethod(
        Invocation.method(
          #enableReducedMotion,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableReducedMotion() => (super.noSuchMethod(
        Invocation.method(
          #disableReducedMotion,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getLargeText() => (super.noSuchMethod(
        Invocation.method(
          #getLargeText,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableLargeText() => (super.noSuchMethod(
        Invocation.method(
          #enableLargeText,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableLargeText() => (super.noSuchMethod(
        Invocation.method(
          #disableLargeText,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getScreenReader() => (super.noSuchMethod(
        Invocation.method(
          #getScreenReader,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableScreenReader() => (super.noSuchMethod(
        Invocation.method(
          #enableScreenReader,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableScreenReader() => (super.noSuchMethod(
        Invocation.method(
          #disableScreenReader,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getVisualAlerts() => (super.noSuchMethod(
        Invocation.method(
          #getVisualAlerts,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableVisualAlerts() => (super.noSuchMethod(
        Invocation.method(
          #enableVisualAlerts,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableVisualAlerts() => (super.noSuchMethod(
        Invocation.method(
          #disableVisualAlerts,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getScreenKeyboard() => (super.noSuchMethod(
        Invocation.method(
          #getScreenKeyboard,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableScreenKeyboard() => (super.noSuchMethod(
        Invocation.method(
          #enableScreenKeyboard,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableScreenKeyboard() => (super.noSuchMethod(
        Invocation.method(
          #disableScreenKeyboard,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getStickyKeys() => (super.noSuchMethod(
        Invocation.method(
          #getStickyKeys,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableStickyKeys() => (super.noSuchMethod(
        Invocation.method(
          #enableStickyKeys,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableStickyKeys() => (super.noSuchMethod(
        Invocation.method(
          #disableStickyKeys,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getSlowKeys() => (super.noSuchMethod(
        Invocation.method(
          #getSlowKeys,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableSlowKeys() => (super.noSuchMethod(
        Invocation.method(
          #enableSlowKeys,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableSlowKeys() => (super.noSuchMethod(
        Invocation.method(
          #disableSlowKeys,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getMouseKeys() => (super.noSuchMethod(
        Invocation.method(
          #getMouseKeys,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableMouseKeys() => (super.noSuchMethod(
        Invocation.method(
          #enableMouseKeys,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableMouseKeys() => (super.noSuchMethod(
        Invocation.method(
          #disableMouseKeys,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> getDesktopZoom() => (super.noSuchMethod(
        Invocation.method(
          #getDesktopZoom,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> enableDesktopZoom() => (super.noSuchMethod(
        Invocation.method(
          #enableDesktopZoom,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> disableDesktopZoom() => (super.noSuchMethod(
        Invocation.method(
          #disableDesktopZoom,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
